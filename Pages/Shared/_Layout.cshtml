@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1.0"/>
<title>@ViewData["Title"] - UyC Group</title>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"/>
<link rel="stylesheet" href="~/css/site.css"/>
<style>
:root{
  --verde:#02343F;
  --negro:#000;
  --blanco:#fff;
}
body{ background:var(--blanco); color:#111;}
.header{ background:var(--verde); color:#fff; }
.brand{ color:#fff; text-decoration:none; font-weight:600; }
.btn-acento{ background:var(--verde); color:#fff; border:0; }
.btn-acento:hover{ background:#012831; color:#fff; }
.sidebar{ position:fixed; inset:0 auto 0 0; width:260px; background:#02343F; color:#fff;
          transform:translateX(-100%); transition:transform .2s ease; z-index:1040; }
.sidebar.open{ transform:translateX(0); }
.sidebar a{ color:#fff; text-decoration:none; display:block; padding:12px 16px; }
.sidebar a:hover{ background:#111; }
.sidebar .title{ padding:16px; font-weight:700; border-bottom:1px solid rgba(255,255,255,.1); }
.overlay{ position:fixed; inset:0; background:rgba(0,0,0,.35); display:none; z-index:1030; }
.overlay.show{ display:block; }
.hamb{ background:transparent; border:0; color:#fff; font-size:28px; line-height:1; }
.topbar{ background:#f8f9fa; border-bottom:1px solid #e9ecef; }
.tablink{ padding:.5rem .9rem; border-radius:.5rem; text-decoration:none; }
.tablink.active{ background:var(--verde); color:#fff; }
.card-iva{ border:1px solid #eee; border-radius:14px; }

.sidebar a.payroll-link{ padding-left:24px; }</style>
</head>
<body>
@{
    var userName = User?.Identity?.Name;
    var initial = string.IsNullOrWhiteSpace(userName)
        ? "U"
        : userName.Trim().Substring(0,1).ToUpperInvariant();
}

<header class="header py-2">
  <div class="container d-flex align-items-center justify-content-between">
    <div class="d-flex align-items-center gap-3">
      <button class="hamb" id="btnHamb" aria-label="menu">&#9776;</button>
      <a class="brand" href="/">UyC Group</a>
    </div>
    <div class="text-white small">
      @if(User?.Identity?.IsAuthenticated ?? false){
        <div class="ms-auto">@await Html.PartialAsync("_TopRightHeader")</div>
      }
    </div>
  </div>
</header>

<div id="sidebar" class="sidebar">
  <div class="title">Menú</div>
  <a href="/Payroll" class="payroll-link">Planilla (RRHH)</a>
  <a href="/Payroll" class="payroll-link">Planilla (RRHH)</a>
  <a href="/Payroll" class="payroll-link">Planilla (RRHH)</a>
  
@if (string.Equals(Configuration["Features:PAYROLL_FEATURE"], "true", System.StringComparison.OrdinalIgnoreCase))
{
    <a asp-area="Payroll" asp-page="/Index">Planilla (RRHH)</a>
}
<a href="/">Inicio</a>
  <a href="/IVA/Seleccion">Cálculo de IVA</a>
</div>
<div id="overlay" class="overlay"></div>


@{ var autoMsg = TempData["AutoDisconnected"] as string; }
            
@if(!string.IsNullOrWhiteSpace(autoMsg)){
  <div class="position-fixed" style="top:1rem; right:1rem; z-index:1080; max-width:420px;">
    <div id="autoDisconnectToast" class="alert alert-light border alert-dismissible fade show shadow" role="alert">
      <div class="d-flex align-items-start">
        <div class="me-2 rounded-circle bg-dark text-white d-inline-flex align-items-center justify-content-center" style="width:28px;height:28px;font-weight:700;">!</div>
        <div class="flex-grow-1">
          <div class="fw-semibold">¡Atención!</div>
          <div>@autoMsg</div>
        </div>
        <div class="ms-2 d-flex align-items-start">
          <span class="fs-4 text-dark fw-bold" aria-hidden="true">!</span>
        </div>
      </div>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  </div>
      <script type="text/javascript">
    (function () {
      setTimeout(function () {
        var el = document.getElementById("autoDisconnectToast");
        if (!el) return;
        try {
          var alert = bootstrap.Alert.getOrCreateInstance(el);
          alert.close();
        } catch (e) {
          try { el.classList.remove("show"); } catch {}
          try { el.remove(); } catch {}
        }
      }, 15000);
    })();
  </script>
}<main class="container my-4">
  @RenderBody()
</main>

<footer class="border-top py-3 mt-5">
  <div class="container text-muted small">
    &copy; @DateTime.Now.Year - UyC Group
  </div>
</footer>

<script>
const sb = document.getElementById('sidebar');
const ov = document.getElementById('overlay');
document.getElementById('btnHamb')?.addEventListener('click', ()=>{ sb.classList.add('open'); ov.classList.add('show'); });
ov?.addEventListener('click', ()=>{ sb.classList.remove('open'); ov.classList.remove('show'); });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
@RenderSection("Scripts", required: false)


</body>
</html>







