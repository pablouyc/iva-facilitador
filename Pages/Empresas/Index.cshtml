@page
@model IvaFacilitador.Pages.Empresas.IndexModel
<style>
  /* Respaldo por si ms-2 no aplica en tu tema */
  .btn-param { margin-left: .5rem; }
</style>
@{
    ViewData["Title"] = "Empresas conectadas";
    Layout = "/Pages/Shared/_Layout.cshtml";
}
<div class="topbar mb-3 py-2">
  <div class="container d-flex align-items-center gap-2">
    <a class="tablink" href="/IVA/Seleccion">Cálculo</a>
    <a class="tablink active" href="/Empresas">Empresas</a>
  </div>
</div>
<div class="row justify-content-center">
  <div class="col-12">
    <div class="card shadow-sm card-iva">
      <div class="card-body p-4">
        <h1 class="h4 mb-3">Empresas conectadas</h1>

        @if (TempData["Success"] is string ok)
        {
            <div class="alert alert-success">@ok</div>
        }
        @if (TempData["Error"] is string err)
        {
            <div class="alert alert-danger">@err</div>
        }

        @if (Model.Companies.Count == 0)
        {
            <div class="alert alert-info">No hay empresas conectadas aún.</div>
            <a class="btn btn-acento" href="/Auth/Connect">Conectar QuickBooks</a>
        }
        else
        {
            <div class="table-responsive">
              <table class="table mb-0">
  <thead>
    <tr>
      <th>Nombre</th>
      <th>Realm ID</th>
      <th>Conectada</th>
      <th style="width:1%"></th>
    </tr>
  </thead>
  <tbody>
@foreach (var c in Model.Companies)
{
    <tr>
        <td class="fw-semibold">@c.Name</td>
        <td class="text-muted">@c.RealmId</td>
        <td class="text-muted">@c.ConnectedAt.ToLocalTime()</td>
        <td class="text-end text-nowrap">
            <form method="post" asp-page-handler="Disconnect" asp-route-realmId="@c.RealmId" class="d-inline">
                @Html.AntiForgeryToken()
                <button type="submit"
                        class="btn btn-outline-danger btn-sm me-2"
                        onclick="return confirm('¿Desea desconectar esta empresa? Se eliminarán los tokens locales.');">
                  Desconectar
                </button>
            </form>
            <button type="button"
                    class="btn btn-outline-secondary btn-sm ms-2"
                    onclick="openParams('@c.RealmId','@c.Name')">
              Parámetros
            </button>
        </td>
    </tr>
}
  </tbody>
</table>
            </div>

            <a class="btn btn-acento" href="/Auth/Connect">Añadir empresa</a>
          }
      </div>
    </div>
  </div>
</div>

<!-- Modal Parámetros -->
<div class="modal fade" id="paramModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Parámetros — <span id="pmCompany"></span></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <div class="row g-3">
          <div class="col-12">
            <div class="border rounded p-3">
              <div class="fw-semibold mb-2">Tarifas de ventas</div>
              <div id="pmSalesTariffs" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-md-6">
            <div class="border rounded p-3 h-100">
              <div class="fw-semibold mb-2">Datáfonos (POS)</div>
              <div id="pmPos" class="text-muted">—</div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="border rounded p-3 h-100">
              <div class="fw-semibold mb-2">MEIC/MAG</div>
              <div id="pmMeicMag" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-12">
            <div class="border rounded p-3">
              <div class="fw-semibold mb-2">Prorrata</div>
              <div id="pmProrrata" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-12">
            <div class="border rounded p-3">
              <div class="fw-semibold mb-2">Cuentas de IVA</div>
              <div id="pmIvaAccounts" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-md-6">
            <div class="border rounded p-3 h-100">
              <div class="fw-semibold mb-2">Exportaciones</div>
              <div id="pmExports" class="text-muted">—</div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="border rounded p-3 h-100">
              <div class="fw-semibold mb-2">Alquileres de bienes de capital</div>
              <div id="pmCapitalRentals" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-12">
            <div class="border rounded p-3">
              <div class="fw-semibold mb-2">Gastos no deducibles</div>
              <div id="pmNonDeductible" class="text-muted">—</div>
            </div>
          </div>

          <div class="col-12">
            <div class="border rounded p-3">
              <div class="fw-semibold mb-2">Exoneraciones</div>
              <div id="pmExemptions" class="text-muted">—</div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <a id="pmEditLink" class="btn btn-primary">Editar</a>
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
@section Scripts{
<script>
  function setText(id, text) {
    var el = document.getElementById(id);
    if (el) el.textContent = text;
  }

  // Inicializar el modal al cargar
  document.addEventListener('DOMContentLoaded', function () {
    var el = document.getElementById('paramModal');
    if (el && typeof bootstrap !== 'undefined') {
      window.paramModal = new bootstrap.Modal(el);
    }
  });

  function openParams(realmId, companyName) {
    // Asegurar modal y mostrarlo de inmediato
    if (!window.paramModal) {
      var el = document.getElementById('paramModal');
      if (!el || typeof bootstrap === 'undefined') return;
      window.paramModal = new bootstrap.Modal(el);
    }
    setText('pmCompany', companyName || realmId);
    var edit = document.getElementById('pmEditLink');
    if (edit) edit.href = '/Parametrizador?RealmId=' + encodeURIComponent(realmId) + '&mode=edit';

    // Limpiar placeholders
    ['pmSalesTariffs','pmPos','pmMeicMag','pmProrrata','pmIvaAccounts','pmExports','pmCapitalRentals','pmNonDeductible','pmExemptions']
      .forEach(function (id) { setText(id, '—'); });

    // Mostrar ya el modal
    window.paramModal.show();

    // Cargar datos (si falla, dejamos placeholders)
    fetch('?handler=Profile&realmId=' + encodeURIComponent(realmId), { credentials: 'same-origin' })
      .then(function (r) { return r.ok ? r.json() : Promise.reject(r.status); })
      .then(function (p) {
        setText('pmSalesTariffs', (p.salesTariffs && p.salesTariffs.length) ? p.salesTariffs.join(', ') : '—');
        setText('pmPos', p.usesPos
          ? ('Sí · Renta: ' + (p.posIncome || '—') + ' · IVA: ' + (p.posVat || '—') + ' · Comisiones: ' + (p.posFees || '—'))
          : 'No');
        setText('pmMeicMag', p.isMeicMag ? 'Sí' : 'No');
        setText('pmProrrata', p.usesProrrata
          ? ('Sí · ' + ((p.prorrataPercent ?? '—')) + '% · ' + (p.computeProrrataAutomatically ? 'Automática' : 'Manual') + ' · Frecuencia: ' + (p.prorrataFrequency || '—'))
          : 'No');
        setText('pmIvaAccounts', 'Control: ' + (p.ivaControl || '—') + ' · Pagar: ' + (p.ivaPayable || '—') + ' · Cobrar: ' + (p.ivaReceivable || '—'));
        setText('pmExports', p.hasExports ? 'Sí' : 'No');
        setText('pmCapitalRentals', p.hasCapitalRentals ? 'Sí' : 'No');
        setText('pmNonDeductible', (p.nonDeductible && p.nonDeductible.length) ? p.nonDeductible.join(', ') : '—');

        if (p.exemptions && p.exemptions.length) {
          var ex = p.exemptions.map(function (e) {
            return (e.type || 'Exención') + ' · ' + ((e.percent ?? '—')) + '%' +
                   (e.validUntil ? (' · vence ' + (new Date(e.validUntil)).toLocaleDateString()) : '') +
                   (e.certificateNumber ? (' · Cert. ' + e.certificateNumber) : '');
          });
          setText('pmExemptions', ex.join(' | '));
        } else {
          setText('pmExemptions', '—');
        }
      })
      .catch(function () { /* dejamos placeholders */ });
  }
</script>
}
