// <auto-generated />
using System;
using IvaFacilitador.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IvaFacilitador.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250817051310_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("IvaFacilitador.Models.ConexionQbo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessTokenEnc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshTokenEnc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConexionesQbo");
                });

            modelBuilder.Entity("IvaFacilitador.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodoRedondeo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PeriodoIva")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PorcentajeIvaDefault")
                        .HasColumnType("TEXT");

                    b.Property<string>("RealmId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("IvaFacilitador.Models.ConexionQbo", b =>
                {
                    b.HasOne("IvaFacilitador.Models.Empresa", null)
                        .WithOne("ConexionQbo")
                        .HasForeignKey("IvaFacilitador.Models.ConexionQbo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IvaFacilitador.Models.Empresa", b =>
                {
                    b.Navigation("ConexionQbo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
