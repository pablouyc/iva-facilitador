// <auto-generated />
using System;
using IvaFacilitador.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IvaFacilitador.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816221718_Init_Stores_To_Postgres")]
    partial class Init_Stores_To_Postgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IvaFacilitador.Data.CompanyProfile", b =>
                {
                    b.Property<string>("RealmId")
                        .HasColumnType("text");

                    b.Property<string>("Json")
                        .HasColumnType("text");

                    b.HasKey("RealmId");

                    b.HasIndex("RealmId")
                        .IsUnique();

                    b.ToTable("CompanyProfiles");
                });

            modelBuilder.Entity("IvaFacilitador.Data.ParametrizacionEmpresa", b =>
                {
                    b.Property<string>("RealmId")
                        .HasColumnType("text");

                    b.Property<string>("JsonConfig")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RealmId");

                    b.HasIndex("RealmId")
                        .IsUnique();

                    b.ToTable("ParametrizacionEmpresas");
                });

            modelBuilder.Entity("IvaFacilitador.Data.QboToken", b =>
                {
                    b.Property<string>("RealmId")
                        .HasColumnType("text");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RealmId");

                    b.HasIndex("RealmId")
                        .IsUnique();

                    b.ToTable("QboTokens");
                });

            modelBuilder.Entity("IvaFacilitador.Models.CompanyConnection", b =>
                {
                    b.Property<string>("RealmId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ConnectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RealmId");

                    b.HasIndex("RealmId")
                        .IsUnique();

                    b.ToTable("CompanyConnections");
                });
#pragma warning restore 612, 618
        }
    }
}
