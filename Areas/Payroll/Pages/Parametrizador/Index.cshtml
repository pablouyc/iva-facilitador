@page "/Payroll/Parametrizador/{id?}"
@model IvaFacilitador.Areas.Payroll.Pages.Parametrizador.IndexModel
@{
    ViewData["Title"] = "Parametrizador de nómina";
}

<h2 class="mb-4">Parametrizador de nómina</h2>

@if (TempData["ok"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success">@ok</div>
}

<form method="post">
    <input type="hidden" name="CompanyId" value="@Model.CompanyId" />

    <fieldset class="mb-4">
        <legend class="h5">Empresa</legend>

        <div class="row g-3">
            <div class="col-12">
                <label class="form-label">Nombre</label>
                <input name="CompanyName" class="form-control" value="@(Model.CompanyName ?? "")" />
            </div>

            <div class="col-md-6">
                <label class="form-label">Cédula</label>
                <input name="Cedula" class="form-control" value="@(Model.Cedula ?? "")" placeholder="Cédula jurídica" />
            </div>

            <div class="col-md-6">
                <label class="form-label">REALMID (QBO)</label>
                <input class="form-control" value="@(Model.RealmId ?? "")" readonly />
            </div>

            <div class="col-md-6">
                <label class="form-label">Periodicidad de pago</label>
                <select name="Periodicidad" class="form-select">
                    <option value="Mensual"   selected="@(Model.Periodicidad == "Mensual"   ? "selected" : null)">Mensual</option>
                    <option value="Quincenal" selected="@(Model.Periodicidad == "Quincenal" ? "selected" : null)">Quincenal</option>
                    <option value="Semanal"   selected="@(Model.Periodicidad == "Semanal"   ? "selected" : null)">Semanal</option>
                </select>
                <div class="form-text">Default: Quincena = 1–15 y 16–fin; Semanal = lunes–domingo.</div>
            </div>
        </div>
    </fieldset>

    <fieldset class="mb-4">
        <legend class="h5 d-flex align-items-center gap-3">
            Sectores
            <span class="form-check">
                <input class="form-check-input" type="checkbox" id="chkSep" name="SepSectores" value="true"
                       checked="@(Model.SepararPorSectores ? "checked" : null)" />
                <label class="form-check-label" for="chkSep">Separar planilla contable por sectores</label>
            </span>
        </legend>

        <p class="text-muted mb-2">Puedes dejar solo “General” si no usarás sectores.</p>

        <div id="sectores-wrap" class="vstack gap-2 mb-3">
            @if (Model.SectorKeys != null && Model.SectorKeys.Count > 0)
            {
                foreach (var s in Model.SectorKeys)
                {
                    <input name="Sectores" class="form-control" value="@s.Name" />
                }
            }
            else
            {
                <input name="Sectores" class="form-control" value="General" />
            }
        </div>

        <button type="button" class="btn btn-outline-secondary btn-sm" id="btnAddSector">+ Agregar sector</button>
    </fieldset>

    <fieldset class="mb-4">
        <legend class="h5">Cuentas contables</legend>

        <div class="alert alert-info py-2">
            Define las cuentas para estas categorías: <strong>SalarioBruto, Extras, CCSS, Deducciones, SalarioNeto</strong>.
        </div>

        <!-- General -->
        <div id="box-general" class="mb-3" style="display:@(Model.SepararPorSectores ? "none" : "block")">
            <h6>Cuentas generales (cuando NO se separa por sectores)</h6>
            @foreach (var cat in Model.Categories)
            {
                <div class="row g-2 align-items-center mb-2">
                    <div class="col-md-4"><label class="col-form-label">@cat</label></div>
                    <div class="col-md-8">
                        <select name="@($"gen_{cat}")" class="form-select">
                            <option value="">(sin seleccionar)</option>
                            @foreach (var acc in Model.Accounts)
                            {
                                var sel = (Model.GeneralMap != null
                                           && Model.GeneralMap.TryGetValue(cat, out var v)
                                           && v == acc.Id) ? "selected" : null;
                                <option value="@acc.Id" selected="@(sel)">@(acc.Name)</option>
                            }
                        </select>
                    </div>
                </div>
            }
        </div>

        <!-- Por sectores -->
        <div id="box-sectores" style="display:@(Model.SepararPorSectores ? "block" : "none")">
            <h6>Cuentas por sector</h6>
            <div class="table-responsive">
                <table class="table table-sm align-middle">
                    <thead>
                        <tr>
                            <th>Sector</th>
                            @foreach (var cat in Model.Categories)
                            {
                                <th>@cat</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.SectorKeys)
                        {
                            var sectorName = s.Name;
                            var key = s.Key;   // ya viene normalizado desde el modelo
                            <tr>
                                <td style="min-width:180px">@sectorName</td>
                                @foreach (var cat in Model.Categories)
                                {
                                    var current = Model.TryGetSectorSelection(sectorName, cat);
                                    <td style="min-width:220px">
                                        <select class="form-select" name="@($"acc_{key}_{cat}")">
                                            <option value="">(sin seleccionar)</option>
                                            @foreach (var acc in Model.Accounts)
                                            {
                                                var sel = (current == acc.Id) ? "selected" : null;
                                                <option value="@acc.Id" selected="@(sel)">@(acc.Name)</option>
                                            }
                                        </select>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </fieldset>

    <div class="d-flex gap-2">
        <button class="btn btn-primary" formaction="?handler=Save">Guardar</button>
        <button class="btn btn-outline-secondary" formaction="?handler=Sync">Sincronizar desde QBO</button>
        <a class="btn btn-light" href="/Payroll/Empresas">Volver</a>
    </div>
</form>

@section Scripts {
<script>
document.getElementById('btnAddSector')?.addEventListener('click', () => {
    const wrap = document.getElementById('sectores-wrap');
    const input = document.createElement('input');
    input.name = 'Sectores';
    input.className = 'form-control';
    input.placeholder = 'Nombre de sector';
    wrap.appendChild(input);
});

const chk = document.getElementById('chkSep');
const boxGen = document.getElementById('box-general');
const boxSec = document.getElementById('box-sectores');
chk?.addEventListener('change', (e) => {
    const on = e.target.checked;
    boxGen.style.display = on ? 'none' : 'block';
    boxSec.style.display = on ? 'block' : 'none';
});
</script>
}
