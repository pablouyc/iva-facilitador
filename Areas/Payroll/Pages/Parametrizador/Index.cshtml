@page "{id:int?}"
@model IvaFacilitador.Areas.Payroll.Pages.Parametrizador.IndexModel
@{
    ViewData["Title"] = "Parametrizador de planilla";
    var accounts = Model.Accounts ?? new List<IvaFacilitador.Areas.Payroll.Pages.Parametrizador.IndexModel.Opt>();
    // Claves de renglones contables (orden fijo)
    var keys = new[] { "SalarioBruto", "Extras", "CCSS", "Deducciones", "SalarioNeto" };
    string Checked(bool v) => v ? "checked" : "";
}

<div class="container my-3">

    <!-- ===================== EMPRESA ===================== -->
    <div class="card mb-3">
        <div class="card-header fw-bold">Empresa</div>
        <div class="card-body">
            <input type="hidden" name="CompanyId" value="@Model.CompanyId" form="frmMain" />
            <div class="row g-3 align-items-end">
                <div class="col-md-6">
                    <label class="form-label">Nombre</label>
                    <input class="form-control" name="CompanyName" value="@Model.CompanyName" form="frmMain" />
                    <div class="form-text">REALMID (QBO): @(Model.RealmId ?? "—")</div>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Cédula (ID)</label>
                    <input class="form-control" name="Cedula" value="" form="frmMain" />
                </div>

                <div class="col-md-3">
                    <label class="form-label">Período</label>
                    <select class="form-select" name="PayPeriod" form="frmMain">
                        <option value="Mensual">Mensual</option>
                        <option value="Quincenal">Quincenal</option>
                        <option value="Semanal">Semanal</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- ===================== SECTORES ===================== -->
    <div class="card mb-3">
        <div class="card-header fw-bold d-flex justify-content-between">
            <span>Sectores</span>
            <div>
                <button type="button" class="btn btn-sm btn-outline-primary" id="btnAddSector">Agregar sector</button>
            </div>
        </div>
        <div class="card-body">
            <div id="sectorList" class="d-flex flex-wrap gap-2">
                @{
                    // Pintamos chips editables (input + botón eliminar)
                    for (var i = 0; i < Model.SectorNames.Count; i++)
                    {
                        var secName = Model.SectorNames[i];
                        <div class="input-group input-group-sm" data-sec="@i" style="width: 280px;">
                            <span class="input-group-text">Sector</span>
                            <input class="form-control" name="SectorName_@i" value="@secName" form="frmMain" />
                            <button type="button" class="btn btn-outline-danger" title="Eliminar" onclick="removeSector(@i)">✕</button>
                        </div>
                    }
                    if (Model.SectorNames.Count == 0)
                    {
                        // Asegurar al menos 'General'
                        <div class="input-group input-group-sm" data-sec="0" style="width: 280px;">
                            <span class="input-group-text">Sector</span>
                            <input class="form-control" name="SectorName_0" value="General" form="frmMain" />
                            <button type="button" class="btn btn-outline-danger" title="Eliminar" onclick="removeSector(0)">✕</button>
                        </div>
                    }
                }
            </div>
            <input type="hidden" id="nextSectorIdx" value="@Model.SectorNames.Count" />
        </div>
    </div>

    <!-- ===================== CONTABILIDAD ===================== -->
    <div class="card mb-4">
        <div class="card-header fw-bold">Contabilidad</div>
        <div class="card-body">
            <!-- Switch separar por sectores -->
            <div class="form-check form-switch mb-3">
                <input class="form-check-input" type="checkbox" id="SplitBySector" name="SplitBySector" value="true" form="frmMain" @Checked(Model.SplitBySector) />
                <label class="form-check-label" for="SplitBySector">Separar contabilidad por sectores</label>
            </div>

            <div id="gridContab">
                @if (!Model.SplitBySector)
                {
                    <!-- Vista NO separada por sectores: una sola fila de selects -->
                    <div class="table-responsive">
                        <table class="table table-sm align-middle">
                            <thead>
                                <tr>
                                    <th style="width:240px">Renglón</th>
                                    <th>Cuenta contable</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var k in keys)
                                {
                                    var label = k switch
                                    {
                                        "SalarioBruto" => "Salario Bruto",
                                        "Extras" => "Extras",
                                        "CCSS" => "CCSS",
                                        "Deducciones" => "Deducciones",
                                        "SalarioNeto" => "Salario Neto",
                                        _ => k
                                    };
                                    var selected = Model.SelectedFor("General", k);
                                    <tr>
                                        <td>@label</td>
                                        <td>
                                            <select class="form-select form-select-sm" name="Map_0_@k" form="frmMain">
                                                <option value="">(sin seleccionar)</option>
                                                @foreach (var a in accounts)
                                                {
                                                    @if (selected == a.Id) { <option value="@a.Id" selected>@a.Name</option> } else { <option value="@a.Id">@a.Name</option> }
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <!-- Vista separada por sectores: una tabla por cada sector -->
                    @for (var i = 0; i < (Model.SectorNames.Count == 0 ? 1 : Model.SectorNames.Count); i++)
                    {
                        var secName = (Model.SectorNames.Count == 0) ? "General" : Model.SectorNames[i];

                        <div class="mb-4 border rounded">
                            <div class="p-2 bg-light fw-semibold">Sector: @secName</div>
                            <div class="table-responsive p-2">
                                <table class="table table-sm align-middle">
                                    <thead>
                                        <tr>
                                            <th style="width:240px">Renglón</th>
                                            <th>Cuenta contable</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var k in keys)
                                        {
                                            var label = k switch
                                            {
                                                "SalarioBruto" => "Salario Bruto",
                                                "Extras" => "Extras",
                                                "CCSS" => "CCSS",
                                                "Deducciones" => "Deducciones",
                                                "SalarioNeto" => "Salario Neto",
                                                _ => k
                                            };
                                            var selected = Model.SelectedFor(secName, k);
                                            <tr>
                                                <td>@label</td>
                                                <td>
                                                    <select class="form-select form-select-sm" name="Map_@(i)_@k" form="frmMain">
                                                        <option value="">(sin seleccionar)</option>
                                                        @foreach (var a in accounts)
                                                        {
                                                            @if (selected == a.Id) { <option value="@a.Id" selected>@a.Name</option> } else { <option value="@a.Id">@a.Name</option> }
                                                        }
                                                    </select>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <!-- ===================== ACCIONES ===================== -->
    <form id="frmMain" method="post" asp-page-handler="Save" class="d-flex gap-2">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-secondary" href="/Payroll/Empresas">Volver</a>
    </form>
</div>

@section Scripts {
<script>
(function () {
    const sectorList = document.getElementById('sectorList');
    const nextIdxEl  = document.getElementById('nextSectorIdx');
    const btnAdd     = document.getElementById('btnAddSector');
    const split      = document.getElementById('SplitBySector');

    btnAdd?.addEventListener('click', () => {
        let idx = parseInt(nextIdxEl.value || "0", 10);
        const wrap = document.createElement('div');
        wrap.className = 'input-group input-group-sm';
        wrap.style.width = '280px';
        wrap.setAttribute('data-sec', String(idx));
        wrap.innerHTML = `
            <span class="input-group-text">Sector</span>
            <input class="form-control" name="SectorName_${idx}" value="Nuevo sector" form="frmMain" />
            <button type="button" class="btn btn-outline-danger" title="Eliminar" onclick="removeSector(${idx})">✕</button>
        `;
        sectorList.appendChild(wrap);
        nextIdxEl.value = String(idx + 1);
        if (split?.checked) {
            // No regeneramos server-side; al guardar, el servidor toma todos los SectorName_*
            // y arma las tablas por sector nuevamente.
        }
    });

    window.removeSector = function (idx) {
        const chip = sectorList.querySelector(`[data-sec="${idx}"]`);
        if (chip) chip.remove();
        // Al guardar, el servidor considerará solo los SectorName_* existentes.
    }
})();
</script>
}

