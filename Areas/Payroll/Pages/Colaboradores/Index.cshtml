@page
@model IvaFacilitador.Areas.Payroll.Pages.Colaboradores.IndexModel
@{
    ViewData["Title"] = "Colaboradores";
    ViewData["PayrollSection"] = "Colaboradores";
    string ActUrl(string s) => Url.Page("", null, new { companyId = Model.CompanyId, status = s }, null)!;
}

@await Html.PartialAsync("~/Areas/Payroll/Components/_Topbar.cshtml")

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">Colaboradores</h2>
    @if (Model.CompanyId.HasValue && Model.CanAdd)
    {
        <button id="btnAgregar" type="button" class="btn btn-success text-white">Agregar</button>
    }
    else
    {
        <button type="button" class="btn btn-outline-secondary" disabled aria-disabled="true">Agregar</button>
    }
</div>

<div class="card mb-3">
  <div class="card-header p-2">
    <ul class="nav nav-tabs card-header-tabs">
      <li class="nav-item">
        <a class="nav-link @(Model.Status=="activos"?"active":"")" href="@ActUrl("activos")">Activos</a>
      </li>
      <li class="nav-item">
        <a class="nav-link @(Model.Status=="inactivos"?"active":"")" href="@ActUrl("inactivos")">Inactivos</a>
      </li>
    </ul>
  </div>
  <div class="card-body p-0">
    <div class="table-responsive">
      <table class="table table-sm mb-0">
        <thead>
          <tr>
            <th>Nombre</th><th>Cédula</th><th>Sector</th><th>Cargo</th><th>Salario</th>
            <th>CCSS</th><th>INS</th><th>Pago</th><th>Estado</th>
          </tr>
        </thead>
        <tbody>
        @if (Model.Rows == null || Model.Rows.Count == 0)
        {
            <tr><td colspan="9" class="text-muted px-3">Sin datos.</td></tr>
        }
        else
        {
            foreach (var r in Model.Rows)
            {
                <tr>
                    <td>@r.Nombre</td>
                    <td>@r.Cedula</td>
                    <td>@(r.Sector ?? "-")</td>
                    <td>@(r.Cargo ?? "-")</td>
                    <td>@(r.SalarioMensual?.ToString("N2"))</td>
                    <td>@(r.HasCcss ? "Sí" : "No")</td>
                    <td>@(r.HasIns ? "Sí" : "No")</td>
                    <td>@r.PorcentajePago</td>
                    <td>@r.Estado</td>
                </tr>
            }
        }
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Panel AGREGAR dentro de la misma página -->
<section id="addPanel" class="card d-none">
  <div class="card-header">Agregar colaboradores</div>
  <div class="card-body">
    <div class="btn-group mb-3" role="group" aria-label="método">
      <button type="button" class="btn btn-outline-primary" id="tab-qbo">QBO</button>
      <button type="button" class="btn btn-outline-secondary" id="tab-manual">Manual</button>
      <button type="button" class="btn btn-outline-secondary" id="tab-excel">Excel</button>
    </div>

    <div id="pane" class="mb-3"></div>

    <div>
      <label class="form-label">Porcentaje de pago por periodo</label>
      <div id="pct-editor"></div>
    </div>
  </div>
  <div class="card-footer d-flex gap-2">
    <button type="button" class="btn btn-secondary" id="btnCerrar">Cerrar</button>
    <button type="button" class="btn btn-primary" id="btnContinuar" disabled>Continuar</button>
  </div>
</section>

@section Scripts{
<script>
(function(){
  if (window.__colab_wired) return; window.__colab_wired = true;

  function qs(s){ return document.querySelector(s); }
  function qsa(s){ return Array.prototype.slice.call(document.querySelectorAll(s)); }

  var companyId = @((Model.CompanyId.HasValue ? Model.CompanyId.Value : 0));
  var canOpen   = @((Model.CompanyId.HasValue && Model.CanAdd) ? "true" : "false");
  var periodo   = ('@Model.Periodo' || 'Mensual').toLowerCase();

  var addPanel = qs('#addPanel');
  var btnAdd   = qs('#btnAgregar');
  var btnClose = qs('#btnCerrar');
  var btnCont  = qs('#btnContinuar');

  function showPanel(){ if (addPanel) { addPanel.classList.remove('d-none'); addPanel.scrollIntoView({behavior:'smooth',block:'start'}); } }
  function hidePanel(){ if (addPanel) { addPanel.classList.add('d-none'); } }

  if (btnAdd && (String(canOpen)==='true')) { btnAdd.addEventListener('click', function(){ showPanel(); }); }
  if (btnClose) btnClose.addEventListener('click', hidePanel);

  // Pestañas de método
  function openPane(kind){
    var host = qs('#pane'); if (!host) return; host.innerHTML='';
    if (kind==='qbo'){
      var d=document.createElement('div');
      d.innerHTML = '<div class="mb-2 text-muted">Importar desde QuickBooks Online</div>'+
                    '<button id="go-qbo" class="btn btn-primary">Traer de QBO</button>';
      host.appendChild(d);
      var g=qs('#go-qbo');
      if (g) g.addEventListener('click', function(e){ e.preventDefault(); if (companyId>0) window.location.href = "?handler=ImportQbo&companyId="+companyId; });
    } else if (kind==='manual'){
      var w=document.createElement('div');
      w.innerHTML = '<div class="mb-2 text-muted">Ingreso manual rápido</div>'+
                    '<div class="row g-2">'+
                    '<div class="col"><label class="form-label">Cédula</label><input class="form-control"></div>'+
                    '<div class="col"><label class="form-label">Nombre</label><input class="form-control"></div>'+
                    '<div class="col"><label class="form-label">Apellido</label><input class="form-control"></div>'+
                    '</div>';
      host.appendChild(w);
    } else if (kind==='excel'){
      var x=document.createElement('div');
      x.innerHTML = '<div class="mb-2 text-muted">Importar desde Excel</div>'+
                    '<input type="file" class="form-control" accept=".xlsx,.xls,.csv">';
      host.appendChild(x);
    }
  }
  var tQ=qs('#tab-qbo'), tM=qs('#tab-manual'), tE=qs('#tab-excel');
  if (tQ) tQ.addEventListener('click', function(){ openPane('qbo'); });
  if (tM) tM.addEventListener('click', function(){ openPane('manual'); });
  if (tE) tE.addEventListener('click', function(){ openPane('excel'); });

  // Editor de periodo (1/2/4) y validación=100%
  function renderPct(p){
    var host = qs('#pct-editor'); if (!host) return;
    host.innerHTML='';
    var cfg = (p==='mensual')?[100]:(p==='quincenal'?[50,50]:[25,25,25,25]);
    var row=document.createElement('div'); row.className='d-flex gap-2 align-items-end flex-wrap';
    for (var i=0;i<cfg.length;i++){
      var w=document.createElement('div'); w.className='d-flex flex-column me-2';
      var lb=document.createElement('label'); lb.className='form-label'; lb.innerText='Periodo '+(i+1);
      var inp=document.createElement('input'); inp.type='number'; inp.min='0'; inp.max='100'; inp.step='1'; inp.value=cfg[i]; inp.className='form-control'; inp.name='PayPct'+(i+1);
      w.appendChild(lb); w.appendChild(inp); row.appendChild(w);
    }
    var info=document.createElement('div'); info.id='pct-total'; info.className='ms-3 fw-bold pt-2';
    host.appendChild(row); host.appendChild(info);
    function validate(){
      var inputs=qsa('#pct-editor input[type=number]'); var sum=0;
      for (var k=0;k<inputs.length;k++){ var v=parseInt(inputs[k].value||'0',10); if(!isNaN(v)) sum+=v; }
      info.textContent='Total: '+sum+'%';
      if (btnCont){ if(sum!==100){ btnCont.setAttribute('disabled','disabled'); btnCont.classList.add('disabled'); } else { btnCont.removeAttribute('disabled'); btnCont.classList.remove('disabled'); } }
    }
    qsa('#pct-editor input[type=number]').forEach(function(x){ x.addEventListener('input', validate); });
    validate();
  }
  renderPct(periodo);
})();
</script>
}
