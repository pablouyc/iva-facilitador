@* Topbar contextual (mock, sin datos reales) *@
@{
    var currentPage = (ViewContext.RouteData.Values["page"] as string) ?? ""; var isIndex = currentPage.EndsWith("/Index", System.StringComparison.OrdinalIgnoreCase); // Fechas por defecto: primer y último día del mes actual
    var today  = DateTime.Today;
    var first  = new DateTime(today.Year, today.Month, 1);
    var last   = first.AddMonths(1).AddDays(-1);

    // Valores en formato ISO para <input type="date">
    var vFirst = first.ToString("yyyy-MM-dd");
    var vLast  = last.ToString("yyyy-MM-dd");
}

<div class="card shadow-sm mb-3">
  <div class="card-body d-flex flex-wrap align-items-center gap-3">

    <!-- Empresa -->
    <div class="me-2">
      <label class="form-label mb-1 small text-muted d-block">Empresa</label>
      <select class="form-select form-select-sm" style="min-width: 220px;" id="payroll-company">
        <option selected>Seleccionar…</option>
        <option>Empresa A (demo)</option>
        <option>Empresa B (demo)</option>
      </select>
    </div>

    <!-- Periodo (rango de fechas) -->
    <div class="me-2">
      <label class="form-label mb-1 small text-muted d-block">Desde</label>
      <input id="rngDesde" type="date" class="form-control form-control-sm" style="min-width: 180px;" value="@vFirst" />
    </div>

    <div class="me-2">
      <label class="form-label mb-1 small text-muted d-block">Hasta</label>
      <input id="rngHasta" type="date" class="form-control form-control-sm" style="min-width: 180px;" value="@vLast" />
    </div>

    <!-- Estado -->
    <div class="me-auto">
      <label class="form-label mb-1 small text-muted d-block">Estado</label>
      <span class="badge text-bg-secondary">Borrador</span>
    </div>

    <!-- Pestañas / acciones (mock, deshabilitadas) -->
    <div class="btn-group btn-group-sm flex-wrap" role="group" aria-label="acciones planilla">
      <a asp-area="Payroll" asp-page="/Index" class="btn btn-outline-secondary btn-sm">Principal</a>
      <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Planilla total</button>
      <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Deducciones</button>
      <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Extras</button>
      <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Reportes</button>
          <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Empresas</button>      <button type="button" class="btn btn-outline-secondary" disabled title="Próximamente">Colaboradores</button></div>

  </div>
</div>

<script>
(function () {
  const d = document;
  const desde = d.getElementById('rngDesde');
  const hasta = d.getElementById('rngHasta');

  // Permite escribir DD/MM/AAAA o DD-MM-AAAA y lo convierte a YYYY-MM-DD
  function toIsoFromDMY(el) {
    if (!el || !el.value) return;
    const m = el.value.trim().match(/^(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})$/);
    if (m) {
      const dd = m[1].padStart(2, '0');
      const mm = m[2].padStart(2, '0');
      const yyyy = m[3];
      el.value = `${yyyy}-${mm}-${dd}`;
    }
  }

  // Garantiza que Hasta >= Desde
  function clamp() {
    if (!desde.value || !hasta.value) return;
    if (hasta.value < desde.value) {
      hasta.value = desde.value;
    }
  }

  ['change', 'blur'].forEach(ev => {
    desde.addEventListener(ev, () => { toIsoFromDMY(desde); clamp(); });
    hasta.addEventListener(ev, () => { toIsoFromDMY(hasta); clamp(); });
  });
})();
</script>



